apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
  labels:
    app: olm-operator
  name: olm-operator
  namespace: clusters-agreeneguest2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: olm-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        app: olm-operator
    spec:
      containers:
      - name: socks5-proxy
        image: quay.io/agreene/socks5-proxy:11
        env:
        - name: KUBECONFIG
          value: /etc/openshift/kubeconfig/kubeconfig
        ports:
        - containerPort: 8090
        volumeMounts:
        - mountPath: /etc/konnectivity-proxy-tls
          name: oas-konnectivity-proxy-cert
        - mountPath: /etc/openshift/kubeconfig
          name: kubeconfig
          readOnly: true
      - args:
        - --namespace
        - $(OPERATOR_NAMESPACE)
        - --writeStatusName
        - operator-lifecycle-manager
        - --writePackageServerStatusName
        - '""'
        - --tls-cert
        - /var/run/secrets/serving-cert/tls.crt
        - --tls-key
        - /var/run/secrets/serving-cert/tls.key
        - --client-ca
        - /var/run/secrets/serving-cert/tls.crt
        command:
        - /bin/olm
        env:
        - name: RELEASE_VERSION
          value: 4.8.6
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OPERATOR_NAME
          value: olm-operator
        - name: KUBECONFIG
          value: /etc/openshift/kubeconfig/kubeconfig
        - name: GRPC_PROXY
          value: socks5://127.0.0.1:8090
        - name: NO_PROXY
          value: kube-apiserver,redhat-operators,certified-operators,community-operators,redhat-marketplace
        image: quay.io/agreene/olm:grpc-proxy37
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: olm-operator
        ports:
        - containerPort: 8080
          name: server
          protocol: TCP
        - containerPort: 8081
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 20m
            memory: 160Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/secrets/serving-cert
          name: serving-cert
        - mountPath: /etc/openshift/kubeconfig
          name: kubeconfig
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: olm-operator-serving-cert
      - name: kubeconfig
        secret:
          defaultMode: 420
          secretName: service-network-admin-kubeconfig
      - name: oas-konnectivity-proxy-cert
        secret:
          defaultMode: 420
          secretName: konnectivity-client

